<?xml version="1.0" encoding="UTF-8"?><record_update table="sc_cat_item_producer">
    <sc_cat_item_producer action="INSERT_OR_UPDATE">
        <active>true</active>
        <availability>on_desktop</availability>
        <billable>false</billable>
        <can_cancel>false</can_cancel>
        <category display_value="Network Standard Changes">abbcbbbf47700200e90d87e8dee49041</category>
        <cost>0</cost>
        <custom_cart/>
        <delivery_plan display_value="DEFAULT">523da512c611228900811a37c97c2014</delivery_plan>
        <delivery_plan_script/>
        <delivery_time>1970-01-03 00:00:00</delivery_time>
        <description/>
        <display_price_property>non_zero</display_price_property>
        <entitlement_script/>
        <flow_designer_flow/>
        <group/>
        <hide_sp>false</hide_sp>
        <icon/>
        <ignore_price>false</ignore_price>
        <image/>
        <list_price>0</list_price>
        <location/>
        <mandatory_attachment>false</mandatory_attachment>
        <meta/>
        <mobile_hide_price>false</mobile_hide_price>
        <mobile_picture/>
        <mobile_picture_type>use_desktop_picture</mobile_picture_type>
        <model/>
        <name>Firewall Request</name>
        <no_attachment_v2>false</no_attachment_v2>
        <no_cart>false</no_cart>
        <no_cart_v2>false</no_cart_v2>
        <no_delivery_time_v2>false</no_delivery_time_v2>
        <no_order>false</no_order>
        <no_order_now>false</no_order_now>
        <no_proceed_checkout>false</no_proceed_checkout>
        <no_quantity>false</no_quantity>
        <no_quantity_v2>false</no_quantity_v2>
        <no_search>false</no_search>
        <no_wishlist_v2>false</no_wishlist_v2>
        <omit_price>false</omit_price>
        <order>0</order>
        <ordered_item_link/>
        <picture/>
        <post_insert_script/>
        <preview>JavaScript: popupOpenStandard("com.glideapp.servicecatalog_cat_item_view.do?v=1&amp;sysparm_id=6e25a30c074f5010c11df2218c1ed042&amp;sysparm_preview=true", "summary");</preview>
        <price>0</price>
        <recurring_frequency/>
        <recurring_price>0</recurring_price>
        <redirect_url>generated_record</redirect_url>
        <request_method/>
        <roles/>
        <sc_catalogs>e0d08b13c3330100c8b837659bba8fb4</sc_catalogs>
        <sc_ic_item_staging/>
        <sc_ic_version/>
        <script><![CDATA[producer.portal_redirect ="domino";

if(producer.being_cloned == "true") {
	gs.info("Need to clone the record");
}
else {
	gs.info("No need to clone");
}
if(producer.submit_as_draft == 'true') {
	current.state = 0;  // draft
	current.user_submision_state = 0;
}
else {
	current.state = 1;  // in assessment
	current.user_submision_state = 1;
}

var rowsRule = producer.domino_firewall_rules_list.getRowCount();

for (var i = 0; i < rowsRule; i++) {

	var grFirewallRule = new GlideRecord('x_513186_domino_ap_firewall_rules');
	grFirewallRule.initialize();

	grFirewallRule.setValue('firewall_req_id', current.getUniqueValue());
	grFirewallRule.setValue('source_server_name', producer.domino_firewall_rules_list.getRow(i).source_server_name);
	grFirewallRule.setValue('source_ip_address', producer.domino_firewall_rules_list.getRow(i).source_ip_address);
	grFirewallRule.setValue('source_mask', producer.domino_firewall_rules_list.getRow(i).source_ip_mask);
	grFirewallRule.setValue('dest_server_name', producer.domino_firewall_rules_list.getRow(i).dest_server_name);
	grFirewallRule.setValue('dest_ip_address', producer.domino_firewall_rules_list.getRow(i).dest_ip_address);
	grFirewallRule.setValue('dest_mask', producer.domino_firewall_rules_list.getRow(i).dest_ip_mask);
	grFirewallRule.setValue('nese_service_name',  producer.domino_firewall_rules_list.getRow(i).nese_service_name);
	grFirewallRule.setValue('port_number', producer.domino_firewall_rules_list.getRow(i).port_number);
	grFirewallRule.setValue('protocol', producer.domino_firewall_rules_list.getRow(i).protocol);

	// In case user is cloning the firewall request, we also need to clone source server network group, 
	// dest server network group, dest port group and all the underlying tables
	var src_group = producer.domino_firewall_rules_list.getRow(i).source_server_network_group;
	var dst_group = producer.domino_firewall_rules_list.getRow(i).dest_server_network_group;
	var port_group = producer.domino_firewall_rules_list.getRow(i).dest_ports_group;
	/* pcnguyen, no need to clone IP groups and Port groups anymore
	if(producer.being_cloned == "true") {
		src_group = cloneServerNetworkGroup(src_group);
		dst_group = cloneServerNetworkGroup(dst_group);
		port_group = clonePortGroup(port_group);
	} pcnguyen */
	grFirewallRule.setValue('source_server_network_group', src_group);
	grFirewallRule.setValue('dest_server_network_group', dst_group);
	grFirewallRule.setValue('dest_ports_group', port_group);
	// end of cloning

	grFirewallRule.insert();
}

function cloneServerNetworkGroup(sys_id) {
	if(!sys_id) {
		return null;
	}
	var gr = new GlideRecord('x_513186_domino_ap_fw_server_network_groups');
	gr.get(sys_id);
	if(!gr){
		return null;
	}
	var result = new GlideRecord('x_513186_domino_ap_fw_server_network_groups');
	result.initialize();
	result.server_network_group_name = gr.server_network_group_name;
	result.server_network_group_owner = gr.server_network_group_owner;
	result.insert();
	
	// Now cloning the server network list
	var src_list = new GlideRecord('x_513186_domino_ap_fw_server_network_lists');
	src_list.addQuery('server_network_group_ref', gr.sys_id);
	src_list.query();
	while(src_list.next()) {
		var dst_list = new GlideRecord('x_513186_domino_ap_fw_server_network_lists');
		dst_list.initialize();
		dst_list.server_network_group_ref = result.sys_id;
		dst_list.ip_address = src_list.ip_address;
		dst_list.mask = src_list.mask;
		dst_list.server_name = src_list.server_name;
		dst_list.insert();
	}
	return result.sys_id;
}
function clonePortGroup(sys_id) {
	if(!sys_id) {
		return null;
	}
	var gr = new GlideRecord('x_513186_domino_ap_fw_ports_group');
	gr.get(sys_id);
	if(!gr){
		return null;
	}
	var result = new GlideRecord('x_513186_domino_ap_fw_ports_group');
	result.initialize();
	result.port_group_name = gr.port_group_name;
	result.port_group_owner = gr.port_group_owner;
	result.insert();
	
	// Now cloning the port list
	var src_list = new GlideRecord('x_513186_domino_ap_fw_ports_list');
	src_list.addQuery('ports_group_ref', gr.sys_id);
	src_list.query();
	while(src_list.next()) {
		var dst_list = new GlideRecord('x_513186_domino_ap_fw_ports_list');
		dst_list.initialize();
		dst_list.ports_group_ref = result.sys_id;
		dst_list.port = src_list.port;
		dst_list.port_protocol = src_list.port_protocol;
		dst_list.insert();
	}
	return result.sys_id;	
}

]]></script>
        <short_description>Firewall  Request</short_description>
        <show_variable_help_on_load>false</show_variable_help_on_load>
        <start_closed>false</start_closed>
        <sys_class_name>sc_cat_item_producer</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-31 03:01:52</sys_created_on>
        <sys_id>6e25a30c074f5010c11df2218c1ed042</sys_id>
        <sys_mod_count>78</sys_mod_count>
        <sys_name>Firewall Request</sys_name>
        <sys_package display_value="Domino App" source="x_513186_domino_ap">21e2d540070b5010c11df2218c1ed04b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Domino App">21e2d540070b5010c11df2218c1ed04b</sys_scope>
        <sys_update_name>sc_cat_item_producer_6e25a30c074f5010c11df2218c1ed042</sys_update_name>
        <sys_updated_by>cuong</sys_updated_by>
        <sys_updated_on>2020-09-28 17:41:07</sys_updated_on>
        <table_name>x_513186_domino_ap_firewall</table_name>
        <template/>
        <type>item</type>
        <use_sc_layout>true</use_sc_layout>
        <vendor/>
        <view/>
        <visible_bundle>true</visible_bundle>
        <visible_guide>true</visible_guide>
        <visible_standalone>true</visible_standalone>
        <workflow/>
    </sc_cat_item_producer>
    <sys_translated_text action="delete_multiple" query="documentkey=6e25a30c074f5010c11df2218c1ed042"/>
    <fx_price action="delete_multiple" query="id=6e25a30c074f5010c11df2218c1ed042"/>
    <fx_price action="INSERT_OR_UPDATE">
        <amount>0</amount>
        <currency display_value="USD">USD</currency>
        <field>price</field>
        <id>6e25a30c074f5010c11df2218c1ed042</id>
        <parent/>
        <reference_amount>0</reference_amount>
        <reference_currency display_value="USD">USD</reference_currency>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-31 03:01:53</sys_created_on>
        <sys_id>b9c52b0c074f5010c11df2218c1ed05b</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-08-31 03:01:53</sys_updated_on>
        <table>sc_cat_item_producer</table>
        <type>calculated</type>
    </fx_price>
    <fx_price action="INSERT_OR_UPDATE">
        <amount>0</amount>
        <currency display_value="USD">USD</currency>
        <field>recurring_price</field>
        <id>6e25a30c074f5010c11df2218c1ed042</id>
        <parent/>
        <reference_amount>0</reference_amount>
        <reference_currency display_value="USD">USD</reference_currency>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-08-31 03:01:53</sys_created_on>
        <sys_id>fdc52b0c074f5010c11df2218c1ed05c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-08-31 03:01:53</sys_updated_on>
        <table>sc_cat_item_producer</table>
        <type>calculated</type>
    </fx_price>
</record_update>
